/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/executive/digital-visit/route";
exports.ids = ["app/api/executive/digital-visit/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fexecutive%2Fdigital-visit%2Froute&page=%2Fapi%2Fexecutive%2Fdigital-visit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fexecutive%2Fdigital-visit%2Froute.ts&appDir=C%3A%5CUsers%5Cvisha%5CDesktop%5CNew%20folder%20(4)%5CZopper%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cvisha%5CDesktop%5CNew%20folder%20(4)%5CZopper&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fexecutive%2Fdigital-visit%2Froute&page=%2Fapi%2Fexecutive%2Fdigital-visit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fexecutive%2Fdigital-visit%2Froute.ts&appDir=C%3A%5CUsers%5Cvisha%5CDesktop%5CNew%20folder%20(4)%5CZopper%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cvisha%5CDesktop%5CNew%20folder%20(4)%5CZopper&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var C_Users_visha_Desktop_New_folder_4_Zopper_src_app_api_executive_digital_visit_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/executive/digital-visit/route.ts */ \"(rsc)/./src/app/api/executive/digital-visit/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/executive/digital-visit/route\",\n        pathname: \"/api/executive/digital-visit\",\n        filename: \"route\",\n        bundlePath: \"app/api/executive/digital-visit/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"C:\\\\Users\\\\visha\\\\Desktop\\\\New folder (4)\\\\Zopper\\\\src\\\\app\\\\api\\\\executive\\\\digital-visit\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_visha_Desktop_New_folder_4_Zopper_src_app_api_executive_digital_visit_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/executive/digital-visit/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fexecutive%2Fdigital-visit%2Froute&page=%2Fapi%2Fexecutive%2Fdigital-visit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fexecutive%2Fdigital-visit%2Froute.ts&appDir=C%3A%5CUsers%5Cvisha%5CDesktop%5CNew%20folder%20(4)%5CZopper%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cvisha%5CDesktop%5CNew%20folder%20(4)%5CZopper&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/executive/digital-visit/route.ts":
/*!******************************************************!*\
  !*** ./src/app/api/executive/digital-visit/route.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./src/lib/auth.ts\");\n/* harmony import */ var _lib_issueIdGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/issueIdGenerator */ \"(rsc)/./src/lib/issueIdGenerator.ts\");\n\n\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.PrismaClient();\n// GET: last 5 digital visits for a store\nasync function GET(request) {\n    try {\n        const user = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.getAuthenticatedUser)(request);\n        if (!user) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Unauthorized'\n        }, {\n            status: 401\n        });\n        if (user.role !== 'EXECUTIVE') return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Access denied. Executive role required.'\n        }, {\n            status: 403\n        });\n        const { searchParams } = new URL(request.url);\n        const storeId = searchParams.get('storeId');\n        if (!storeId) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Store ID is required'\n        }, {\n            status: 400\n        });\n        const currentExecutive = await prisma.executive.findUnique({\n            where: {\n                userId: user.userId\n            }\n        });\n        if (!currentExecutive) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Executive profile not found'\n        }, {\n            status: 404\n        });\n        const visits = await prisma.digitalVisit.findMany({\n            where: {\n                storeId\n            },\n            include: {\n                issues: true,\n                store: true,\n                executive: {\n                    include: {\n                        user: true\n                    }\n                },\n                reviewedByAdmin: true\n            },\n            orderBy: {\n                connectDate: 'desc'\n            },\n            take: 5\n        });\n        const transformed = visits.map((v)=>({\n                id: v.id,\n                date: v.connectDate,\n                status: v.status,\n                representative: v.executive?.name || 'Unknown Executive',\n                canViewDetails: v.executiveId === currentExecutive.id,\n                personMet: v.personMet,\n                remarks: v.remarks,\n                adminComment: v.adminComment || null,\n                storeName: v.store?.storeName || 'Unknown Store',\n                issues: v.issues?.map((i)=>({\n                        id: i.id,\n                        details: i.details,\n                        status: i.status,\n                        createdAt: i.createdAt\n                    })) || [],\n                createdAt: v.createdAt,\n                updatedAt: v.updatedAt\n            }));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: transformed\n        });\n    } catch (e) {\n        console.error('Error fetching digital visits:', e);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to fetch digital visits'\n        }, {\n            status: 500\n        });\n    } finally{\n        await prisma.$disconnect();\n    }\n}\n// POST: create a new digital visit\nasync function POST(request) {\n    try {\n        const user = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.getAuthenticatedUser)(request);\n        if (!user) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Unauthorized'\n        }, {\n            status: 401\n        });\n        if (user.role !== 'EXECUTIVE') return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Access denied. Executive role required.'\n        }, {\n            status: 403\n        });\n        const executive = await prisma.executive.findUnique({\n            where: {\n                userId: user.userId\n            }\n        });\n        if (!executive) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Executive profile not found'\n        }, {\n            status: 404\n        });\n        const { storeId, visitDate, connectDate, personMet, remarks, issuesRaised } = await request.json();\n        const dateStr = connectDate || visitDate; // backward compat\n        if (!storeId || !dateStr) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'storeId and connectDate are required'\n        }, {\n            status: 400\n        });\n        if (!personMet || !Array.isArray(personMet) || personMet.length === 0) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'At least one person spoken is required'\n        }, {\n            status: 400\n        });\n        if (!remarks || String(remarks).trim() === '') return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Remarks are required'\n        }, {\n            status: 400\n        });\n        // Validate store assignment\n        const assignment = await prisma.executiveStoreAssignment.findUnique({\n            where: {\n                executiveId_storeId: {\n                    executiveId: executive.id,\n                    storeId\n                }\n            }\n        });\n        if (!assignment) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Access denied: You are not assigned to this store',\n            code: 'STORE_NOT_ASSIGNED'\n        }, {\n            status: 403\n        });\n        // Convert connect date\n        const connectDateObj = new Date(`${dateStr}T00:00:00.000Z`);\n        if (isNaN(connectDateObj.getTime())) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Invalid connect date'\n            }, {\n                status: 400\n            });\n        }\n        const digitalVisit = await prisma.digitalVisit.create({\n            data: {\n                connectDate: connectDateObj,\n                personMet: personMet,\n                remarks: String(remarks).trim(),\n                status: 'PENDING_REVIEW',\n                executiveId: executive.id,\n                storeId\n            }\n        });\n        let createdIssues = [];\n        if (issuesRaised && Array.isArray(issuesRaised) && issuesRaised.length > 0) {\n            for (const details of issuesRaised){\n                if (details && String(details).trim() !== '') {\n                    // Generate a 7-character unique ID to match Issue schema expectations\n                    const uniqueIssueId = await (0,_lib_issueIdGenerator__WEBPACK_IMPORTED_MODULE_3__.generateUniqueIssueId)();\n                    const created = await prisma.issue.create({\n                        data: {\n                            id: uniqueIssueId,\n                            details: String(details).trim(),\n                            digitalVisitId: digitalVisit.id,\n                            createdAt: connectDateObj // align issue date with connect date\n                        }\n                    });\n                    createdIssues.push({\n                        id: created.id,\n                        details: created.details,\n                        status: created.status\n                    });\n                }\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                digitalVisit: {\n                    id: digitalVisit.id,\n                    status: digitalVisit.status,\n                    connectDate: digitalVisit.connectDate\n                },\n                issues: createdIssues\n            }\n        });\n    } catch (e) {\n        console.error('Error creating digital visit:', e);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to create digital visit'\n        }, {\n            status: 500\n        });\n    } finally{\n        await prisma.$disconnect();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/executive/digital-visit/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAllCache: () => (/* binding */ clearAllCache),\n/* harmony export */   clearAuthCookies: () => (/* binding */ clearAuthCookies),\n/* harmony export */   getAuthenticatedUser: () => (/* binding */ getAuthenticatedUser),\n/* harmony export */   storeUserInfo: () => (/* binding */ storeUserInfo),\n/* harmony export */   validateAndRefreshToken: () => (/* binding */ validateAndRefreshToken)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jwt */ \"(rsc)/./src/lib/jwt.ts\");\n\n\n/**\r\n * Validates access token and refreshes it if expired using refresh token\r\n * Returns authentication result and optionally a response with new cookies\r\n */ async function validateAndRefreshToken(request) {\n    const accessToken = request.cookies.get('accessToken')?.value;\n    const refreshToken = request.cookies.get('refreshToken')?.value;\n    // If no access token, try to use refresh token\n    if (!accessToken) {\n        if (!refreshToken) {\n            return {\n                isAuthenticated: false\n            };\n        }\n        return await refreshAccessToken(refreshToken);\n    }\n    // Try to verify access token\n    try {\n        const user = (0,_jwt__WEBPACK_IMPORTED_MODULE_1__.verifyToken)(accessToken);\n        return {\n            isAuthenticated: true,\n            user\n        };\n    } catch (error) {\n        // Access token is invalid/expired, try refresh token\n        if (!refreshToken) {\n            return {\n                isAuthenticated: false\n            };\n        }\n        return await refreshAccessToken(refreshToken);\n    }\n}\n/**\r\n * Creates new access token using refresh token\r\n */ async function refreshAccessToken(refreshToken) {\n    try {\n        // Verify refresh token\n        const user = (0,_jwt__WEBPACK_IMPORTED_MODULE_1__.verifyToken)(refreshToken);\n        // Generate new access token\n        const newAccessToken = (0,_jwt__WEBPACK_IMPORTED_MODULE_1__.generateAccessToken)(user);\n        const accessTokenExpiry = (0,_jwt__WEBPACK_IMPORTED_MODULE_1__.getTokenExpiry)(process.env.JWT_ACCESS_EXPIRY || '15m');\n        // Create response with new access token cookie\n        const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n        response.cookies.set('accessToken', newAccessToken, {\n            httpOnly: true,\n            secure: false,\n            sameSite: 'lax',\n            expires: accessTokenExpiry,\n            path: '/'\n        });\n        return {\n            isAuthenticated: true,\n            user,\n            response\n        };\n    } catch (error) {\n        // Refresh token is also invalid\n        return {\n            isAuthenticated: false\n        };\n    }\n}\n/**\r\n * Clears authentication cookies and user info\r\n */ function clearAuthCookies(response) {\n    response.cookies.set('accessToken', '', {\n        httpOnly: true,\n        secure: \"development\" === 'production',\n        sameSite: 'lax',\n        expires: new Date(0),\n        path: '/'\n    });\n    response.cookies.set('refreshToken', '', {\n        httpOnly: true,\n        secure: \"development\" === 'production',\n        sameSite: 'lax',\n        expires: new Date(0),\n        path: '/'\n    });\n    // Clear user info cookie as well\n    response.cookies.set('userInfo', '', {\n        httpOnly: false,\n        secure: \"development\" === 'production',\n        sameSite: 'lax',\n        expires: new Date(0),\n        path: '/'\n    });\n    return response;\n}\n/**\r\n * Gets authenticated user from request cookies\r\n * Automatically sets refreshed tokens in response cookies\r\n */ async function getAuthenticatedUser(request) {\n    const authResult = await validateAndRefreshToken(request);\n    // If tokens were refreshed, set them directly in the response using Next.js cookies\n    if (authResult.response && authResult.isAuthenticated) {\n        try {\n            const { cookies } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/next\").then(__webpack_require__.bind(__webpack_require__, /*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\"));\n            const cookieStore = await cookies();\n            const refreshedCookies = authResult.response.cookies.getAll();\n            // Set refreshed cookies directly in the current API response\n            refreshedCookies.forEach((cookie)=>{\n                cookieStore.set(cookie.name, cookie.value, {\n                    httpOnly: true,\n                    secure: \"development\" === 'production',\n                    sameSite: 'lax',\n                    expires: cookie.expires ? new Date(cookie.expires) : undefined,\n                    path: '/'\n                });\n            });\n        } catch (error) {\n            console.error('Failed to set refreshed cookies:', error);\n        }\n    }\n    return authResult.isAuthenticated ? authResult.user || null : null;\n}\n/**\r\n * Clears all user-specific cache and storage data (client-side)\r\n * Call this function on logout to prevent data leakage between users\r\n */ function clearAllCache() {\n    console.log('🧹 Starting cache clearing process...');\n    try {\n        // Clear localStorage\n        if (typeof Storage !== 'undefined' && localStorage) {\n            const localStorageCount = localStorage.length;\n            localStorage.clear();\n            console.log(`✅ LocalStorage cleared (${localStorageCount} items)`);\n        } else {\n            console.log('⚠️ LocalStorage not available');\n        }\n        // Clear sessionStorage  \n        if (typeof Storage !== 'undefined' && sessionStorage) {\n            const sessionStorageCount = sessionStorage.length;\n            sessionStorage.clear();\n            console.log(`✅ SessionStorage cleared (${sessionStorageCount} items)`);\n        } else {\n            console.log('⚠️ SessionStorage not available');\n        }\n        // Clear all cookies manually (in addition to server-side clearing)\n        if (typeof document !== 'undefined') {\n            const cookiesBefore = document.cookie;\n            console.log('🍪 Cookies before clearing:', cookiesBefore);\n            document.cookie.split(';').forEach((cookie)=>{\n                const eqPos = cookie.indexOf('=');\n                const name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie.trim();\n                if (name) {\n                    // Clear cookie for current path\n                    document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/`;\n                    // Clear cookie for domain\n                    document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/; domain=${window.location.hostname}`;\n                    console.log(`🗑️ Cleared cookie: ${name}`);\n                }\n            });\n            const cookiesAfter = document.cookie;\n            console.log('🍪 Cookies after clearing:', cookiesAfter);\n        } else {\n            console.log('⚠️ Document not available for cookie clearing');\n        }\n        // Clear Service Worker caches\n        if ('caches' in window) {\n            caches.keys().then((names)=>{\n                console.log(`🗄️ Found ${names.length} cache(s) to clear:`, names);\n                names.forEach((name)=>{\n                    caches.delete(name).then((success)=>{\n                        console.log(`${success ? '✅' : '❌'} Cache '${name}' deletion: ${success}`);\n                    });\n                });\n            }).catch((error)=>{\n                console.warn('❌ Could not clear Service Worker caches:', error);\n            });\n        } else {\n            console.log('⚠️ Service Worker caches not available');\n        }\n        // Clear any React/Next.js specific cached data\n        if (false) {}\n        console.log('✅ All user cache cleared successfully');\n    } catch (error) {\n        console.error('❌ Error clearing user cache:', error);\n    }\n}\n/**\r\n * Stores user information in cookie as JSON string\r\n */ function storeUserInfo(response, userPayload) {\n    try {\n        // Store user info as JSON string in cookie\n        const userInfoJson = JSON.stringify(userPayload);\n        response.cookies.set('userInfo', userInfoJson, {\n            httpOnly: false,\n            secure: false,\n            sameSite: 'lax',\n            expires: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n            path: '/'\n        });\n        return response;\n    } catch (error) {\n        console.error('Error storing user info:', error);\n        return response;\n    }\n} /**\r\n * Protected route patterns that require authentication\r\n */  // export const PROTECTED_ROUTES = [\n //   '/admin',\n //   '/executive',\n //   '/api/admin',\n //   '/api/executive'\n // ];\n /**\r\n * Public route patterns that don't require authentication\r\n */  // export const PUBLIC_ROUTES = [\n //   '/',\n //   '/api/auth'\n // ];\n /**\r\n * Checks if a path requires authentication\r\n */  // export function isProtectedRoute(pathname: string): boolean {\n //   return PROTECTED_ROUTES.some(route => pathname.startsWith(route));\n // }\n /**\r\n * Checks if a path is public\r\n */  // export function isPublicRoute(pathname: string): boolean {\n //   return PUBLIC_ROUTES.some(route => pathname.startsWith(route));\n // }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/issueIdGenerator.ts":
/*!*************************************!*\
  !*** ./src/lib/issueIdGenerator.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateUniqueIssueId: () => (/* binding */ generateUniqueIssueId)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n/**\r\n * Generates a unique 7-character alphanumeric ID for issues\r\n * Format: 3 letters + 4 numbers (e.g., ABC1234)\r\n */ async function generateUniqueIssueId() {\n    const maxAttempts = 10;\n    for(let attempt = 0; attempt < maxAttempts; attempt++){\n        // Generate 3 random uppercase letters\n        const letters = Array.from({\n            length: 3\n        }, ()=>String.fromCharCode(65 + Math.floor(Math.random() * 26))).join('');\n        // Generate 4 random digits\n        const numbers = Array.from({\n            length: 4\n        }, ()=>Math.floor(Math.random() * 10)).join('');\n        const issueId = letters + numbers;\n        // Check if this ID already exists\n        const existingIssue = await prisma.issue.findUnique({\n            where: {\n                id: issueId\n            }\n        });\n        if (!existingIssue) {\n            return issueId;\n        }\n    }\n    // Fallback: use timestamp-based ID if all attempts failed\n    const timestamp = Date.now().toString().slice(-4);\n    const randomLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26));\n    const randomLetters = Array.from({\n        length: 2\n    }, ()=>String.fromCharCode(65 + Math.floor(Math.random() * 26))).join('');\n    return randomLetter + randomLetters + timestamp;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2lzc3VlSWRHZW5lcmF0b3IudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThDO0FBRTlDLE1BQU1DLFNBQVMsSUFBSUQsd0RBQVlBO0FBRS9COzs7Q0FHQyxHQUNNLGVBQWVFO0lBQ3BCLE1BQU1DLGNBQWM7SUFFcEIsSUFBSyxJQUFJQyxVQUFVLEdBQUdBLFVBQVVELGFBQWFDLFVBQVc7UUFDdEQsc0NBQXNDO1FBQ3RDLE1BQU1DLFVBQVVDLE1BQU1DLElBQUksQ0FBQztZQUFFQyxRQUFRO1FBQUUsR0FBRyxJQUN4Q0MsT0FBT0MsWUFBWSxDQUFDLEtBQUtDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLLE1BQ3BEQyxJQUFJLENBQUM7UUFFUCwyQkFBMkI7UUFDM0IsTUFBTUMsVUFBVVQsTUFBTUMsSUFBSSxDQUFDO1lBQUVDLFFBQVE7UUFBRSxHQUFHLElBQ3hDRyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBSyxLQUMzQkMsSUFBSSxDQUFDO1FBRVAsTUFBTUUsVUFBVVgsVUFBVVU7UUFFMUIsa0NBQWtDO1FBQ2xDLE1BQU1FLGdCQUFnQixNQUFNaEIsT0FBT2lCLEtBQUssQ0FBQ0MsVUFBVSxDQUFDO1lBQ2xEQyxPQUFPO2dCQUFFQyxJQUFJTDtZQUFRO1FBQ3ZCO1FBRUEsSUFBSSxDQUFDQyxlQUFlO1lBQ2xCLE9BQU9EO1FBQ1Q7SUFDRjtJQUVBLDBEQUEwRDtJQUMxRCxNQUFNTSxZQUFZQyxLQUFLQyxHQUFHLEdBQUdDLFFBQVEsR0FBR0MsS0FBSyxDQUFDLENBQUM7SUFDL0MsTUFBTUMsZUFBZWxCLE9BQU9DLFlBQVksQ0FBQyxLQUFLQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBSztJQUN6RSxNQUFNZSxnQkFBZ0J0QixNQUFNQyxJQUFJLENBQUM7UUFBRUMsUUFBUTtJQUFFLEdBQUcsSUFDOUNDLE9BQU9DLFlBQVksQ0FBQyxLQUFLQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBSyxNQUNwREMsSUFBSSxDQUFDO0lBRVAsT0FBT2EsZUFBZUMsZ0JBQWdCTjtBQUN4QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFx2aXNoYVxcRGVza3RvcFxcTmV3IGZvbGRlciAoNClcXFpvcHBlclxcc3JjXFxsaWJcXGlzc3VlSWRHZW5lcmF0b3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnO1xyXG5cclxuY29uc3QgcHJpc21hID0gbmV3IFByaXNtYUNsaWVudCgpO1xyXG5cclxuLyoqXHJcbiAqIEdlbmVyYXRlcyBhIHVuaXF1ZSA3LWNoYXJhY3RlciBhbHBoYW51bWVyaWMgSUQgZm9yIGlzc3Vlc1xyXG4gKiBGb3JtYXQ6IDMgbGV0dGVycyArIDQgbnVtYmVycyAoZS5nLiwgQUJDMTIzNClcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW5lcmF0ZVVuaXF1ZUlzc3VlSWQoKTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICBjb25zdCBtYXhBdHRlbXB0cyA9IDEwO1xyXG4gIFxyXG4gIGZvciAobGV0IGF0dGVtcHQgPSAwOyBhdHRlbXB0IDwgbWF4QXR0ZW1wdHM7IGF0dGVtcHQrKykge1xyXG4gICAgLy8gR2VuZXJhdGUgMyByYW5kb20gdXBwZXJjYXNlIGxldHRlcnNcclxuICAgIGNvbnN0IGxldHRlcnMgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiAzIH0sICgpID0+IFxyXG4gICAgICBTdHJpbmcuZnJvbUNoYXJDb2RlKDY1ICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjYpKVxyXG4gICAgKS5qb2luKCcnKTtcclxuICAgIFxyXG4gICAgLy8gR2VuZXJhdGUgNCByYW5kb20gZGlnaXRzXHJcbiAgICBjb25zdCBudW1iZXJzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogNCB9LCAoKSA9PiBcclxuICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApXHJcbiAgICApLmpvaW4oJycpO1xyXG4gICAgXHJcbiAgICBjb25zdCBpc3N1ZUlkID0gbGV0dGVycyArIG51bWJlcnM7XHJcbiAgICBcclxuICAgIC8vIENoZWNrIGlmIHRoaXMgSUQgYWxyZWFkeSBleGlzdHNcclxuICAgIGNvbnN0IGV4aXN0aW5nSXNzdWUgPSBhd2FpdCBwcmlzbWEuaXNzdWUuZmluZFVuaXF1ZSh7XHJcbiAgICAgIHdoZXJlOiB7IGlkOiBpc3N1ZUlkIH1cclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBpZiAoIWV4aXN0aW5nSXNzdWUpIHtcclxuICAgICAgcmV0dXJuIGlzc3VlSWQ7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC8vIEZhbGxiYWNrOiB1c2UgdGltZXN0YW1wLWJhc2VkIElEIGlmIGFsbCBhdHRlbXB0cyBmYWlsZWRcclxuICBjb25zdCB0aW1lc3RhbXAgPSBEYXRlLm5vdygpLnRvU3RyaW5nKCkuc2xpY2UoLTQpO1xyXG4gIGNvbnN0IHJhbmRvbUxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoNjUgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNikpO1xyXG4gIGNvbnN0IHJhbmRvbUxldHRlcnMgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiAyIH0sICgpID0+IFxyXG4gICAgU3RyaW5nLmZyb21DaGFyQ29kZSg2NSArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI2KSlcclxuICApLmpvaW4oJycpO1xyXG4gIFxyXG4gIHJldHVybiByYW5kb21MZXR0ZXIgKyByYW5kb21MZXR0ZXJzICsgdGltZXN0YW1wO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWEiLCJnZW5lcmF0ZVVuaXF1ZUlzc3VlSWQiLCJtYXhBdHRlbXB0cyIsImF0dGVtcHQiLCJsZXR0ZXJzIiwiQXJyYXkiLCJmcm9tIiwibGVuZ3RoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiam9pbiIsIm51bWJlcnMiLCJpc3N1ZUlkIiwiZXhpc3RpbmdJc3N1ZSIsImlzc3VlIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaWQiLCJ0aW1lc3RhbXAiLCJEYXRlIiwibm93IiwidG9TdHJpbmciLCJzbGljZSIsInJhbmRvbUxldHRlciIsInJhbmRvbUxldHRlcnMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/issueIdGenerator.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/jwt.ts":
/*!************************!*\
  !*** ./src/lib/jwt.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateAccessToken: () => (/* binding */ generateAccessToken),\n/* harmony export */   generateRefreshToken: () => (/* binding */ generateRefreshToken),\n/* harmony export */   getTokenExpiry: () => (/* binding */ getTokenExpiry),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'zopvish12';\nconst JWT_ACCESS_EXPIRY = process.env.JWT_ACCESS_EXPIRY || '15m';\nconst JWT_REFRESH_EXPIRY = process.env.JWT_REFRESH_EXPIRY || '7d';\nfunction generateAccessToken(payload) {\n    // Remove existing exp and iat properties to avoid conflicts\n    const cleanPayload = {\n        userId: payload.userId,\n        email: payload.email,\n        username: payload.username,\n        role: payload.role\n    };\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign(cleanPayload, JWT_SECRET, {\n        expiresIn: JWT_ACCESS_EXPIRY\n    });\n}\nfunction generateRefreshToken(payload) {\n    // Remove existing exp and iat properties to avoid conflicts\n    const cleanPayload = {\n        userId: payload.userId,\n        email: payload.email,\n        username: payload.username,\n        role: payload.role\n    };\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign(cleanPayload, JWT_SECRET, {\n        expiresIn: JWT_REFRESH_EXPIRY\n    });\n}\nfunction verifyToken(token) {\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, JWT_SECRET);\n}\nfunction getTokenExpiry(expiry) {\n    const now = new Date();\n    if (expiry.includes('m')) {\n        const minutes = parseInt(expiry.replace('m', ''));\n        return new Date(now.getTime() + minutes * 60 * 1000);\n    } else if (expiry.includes('d')) {\n        const days = parseInt(expiry.replace('d', ''));\n        return new Date(now.getTime() + days * 24 * 60 * 60 * 1000);\n    } else if (expiry.includes('h')) {\n        const hours = parseInt(expiry.replace('h', ''));\n        return new Date(now.getTime() + hours * 60 * 60 * 1000);\n    }\n    // Default to 15 minutes\n    return new Date(now.getTime() + 15 * 60 * 1000);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2p3dC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBK0I7QUFFL0IsTUFBTUMsYUFBYUMsUUFBUUMsR0FBRyxDQUFDRixVQUFVLElBQUk7QUFDN0MsTUFBTUcsb0JBQW9CRixRQUFRQyxHQUFHLENBQUNDLGlCQUFpQixJQUFJO0FBQzNELE1BQU1DLHFCQUFxQkgsUUFBUUMsR0FBRyxDQUFDRSxrQkFBa0IsSUFBSTtBQVN0RCxTQUFTQyxvQkFBb0JDLE9BQXFCO0lBQ3ZELDREQUE0RDtJQUM1RCxNQUFNQyxlQUFlO1FBQ25CQyxRQUFRRixRQUFRRSxNQUFNO1FBQ3RCQyxPQUFPSCxRQUFRRyxLQUFLO1FBQ3BCQyxVQUFVSixRQUFRSSxRQUFRO1FBQzFCQyxNQUFNTCxRQUFRSyxJQUFJO0lBQ3BCO0lBQ0EsT0FBTyx3REFBaUIsQ0FBQ0osY0FBY1AsWUFBWTtRQUFFYSxXQUFXVjtJQUFrQjtBQUNwRjtBQUVPLFNBQVNXLHFCQUFxQlIsT0FBcUI7SUFDeEQsNERBQTREO0lBQzVELE1BQU1DLGVBQWU7UUFDbkJDLFFBQVFGLFFBQVFFLE1BQU07UUFDdEJDLE9BQU9ILFFBQVFHLEtBQUs7UUFDcEJDLFVBQVVKLFFBQVFJLFFBQVE7UUFDMUJDLE1BQU1MLFFBQVFLLElBQUk7SUFDcEI7SUFDQSxPQUFPLHdEQUFpQixDQUFDSixjQUFjUCxZQUFZO1FBQUVhLFdBQVdUO0lBQW1CO0FBQ3JGO0FBRU8sU0FBU1csWUFBWUMsS0FBYTtJQUN2QyxPQUFPakIsMERBQVUsQ0FBQ2lCLE9BQU9oQjtBQUMzQjtBQUVPLFNBQVNrQixlQUFlQyxNQUFjO0lBQzNDLE1BQU1DLE1BQU0sSUFBSUM7SUFFaEIsSUFBSUYsT0FBT0csUUFBUSxDQUFDLE1BQU07UUFDeEIsTUFBTUMsVUFBVUMsU0FBU0wsT0FBT00sT0FBTyxDQUFDLEtBQUs7UUFDN0MsT0FBTyxJQUFJSixLQUFLRCxJQUFJTSxPQUFPLEtBQUtILFVBQVUsS0FBSztJQUNqRCxPQUFPLElBQUlKLE9BQU9HLFFBQVEsQ0FBQyxNQUFNO1FBQy9CLE1BQU1LLE9BQU9ILFNBQVNMLE9BQU9NLE9BQU8sQ0FBQyxLQUFLO1FBQzFDLE9BQU8sSUFBSUosS0FBS0QsSUFBSU0sT0FBTyxLQUFLQyxPQUFPLEtBQUssS0FBSyxLQUFLO0lBQ3hELE9BQU8sSUFBSVIsT0FBT0csUUFBUSxDQUFDLE1BQU07UUFDL0IsTUFBTU0sUUFBUUosU0FBU0wsT0FBT00sT0FBTyxDQUFDLEtBQUs7UUFDM0MsT0FBTyxJQUFJSixLQUFLRCxJQUFJTSxPQUFPLEtBQUtFLFFBQVEsS0FBSyxLQUFLO0lBQ3BEO0lBRUEsd0JBQXdCO0lBQ3hCLE9BQU8sSUFBSVAsS0FBS0QsSUFBSU0sT0FBTyxLQUFLLEtBQUssS0FBSztBQUM1QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFx2aXNoYVxcRGVza3RvcFxcTmV3IGZvbGRlciAoNClcXFpvcHBlclxcc3JjXFxsaWJcXGp3dC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XHJcblxyXG5jb25zdCBKV1RfU0VDUkVUID0gcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCB8fCAnem9wdmlzaDEyJztcclxuY29uc3QgSldUX0FDQ0VTU19FWFBJUlkgPSBwcm9jZXNzLmVudi5KV1RfQUNDRVNTX0VYUElSWSB8fCAnMTVtJztcclxuY29uc3QgSldUX1JFRlJFU0hfRVhQSVJZID0gcHJvY2Vzcy5lbnYuSldUX1JFRlJFU0hfRVhQSVJZIHx8ICc3ZCc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRva2VuUGF5bG9hZCB7XHJcbiAgdXNlcklkOiBzdHJpbmc7XHJcbiAgZW1haWw6IHN0cmluZztcclxuICB1c2VybmFtZTogc3RyaW5nO1xyXG4gIHJvbGU6IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlQWNjZXNzVG9rZW4ocGF5bG9hZDogVG9rZW5QYXlsb2FkKTogc3RyaW5nIHtcclxuICAvLyBSZW1vdmUgZXhpc3RpbmcgZXhwIGFuZCBpYXQgcHJvcGVydGllcyB0byBhdm9pZCBjb25mbGljdHNcclxuICBjb25zdCBjbGVhblBheWxvYWQgPSB7XHJcbiAgICB1c2VySWQ6IHBheWxvYWQudXNlcklkLFxyXG4gICAgZW1haWw6IHBheWxvYWQuZW1haWwsXHJcbiAgICB1c2VybmFtZTogcGF5bG9hZC51c2VybmFtZSxcclxuICAgIHJvbGU6IHBheWxvYWQucm9sZVxyXG4gIH07XHJcbiAgcmV0dXJuIChqd3QgYXMgYW55KS5zaWduKGNsZWFuUGF5bG9hZCwgSldUX1NFQ1JFVCwgeyBleHBpcmVzSW46IEpXVF9BQ0NFU1NfRVhQSVJZIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVSZWZyZXNoVG9rZW4ocGF5bG9hZDogVG9rZW5QYXlsb2FkKTogc3RyaW5nIHtcclxuICAvLyBSZW1vdmUgZXhpc3RpbmcgZXhwIGFuZCBpYXQgcHJvcGVydGllcyB0byBhdm9pZCBjb25mbGljdHNcclxuICBjb25zdCBjbGVhblBheWxvYWQgPSB7XHJcbiAgICB1c2VySWQ6IHBheWxvYWQudXNlcklkLFxyXG4gICAgZW1haWw6IHBheWxvYWQuZW1haWwsXHJcbiAgICB1c2VybmFtZTogcGF5bG9hZC51c2VybmFtZSxcclxuICAgIHJvbGU6IHBheWxvYWQucm9sZVxyXG4gIH07XHJcbiAgcmV0dXJuIChqd3QgYXMgYW55KS5zaWduKGNsZWFuUGF5bG9hZCwgSldUX1NFQ1JFVCwgeyBleHBpcmVzSW46IEpXVF9SRUZSRVNIX0VYUElSWSB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHZlcmlmeVRva2VuKHRva2VuOiBzdHJpbmcpOiBUb2tlblBheWxvYWQge1xyXG4gIHJldHVybiBqd3QudmVyaWZ5KHRva2VuLCBKV1RfU0VDUkVUKSBhcyBUb2tlblBheWxvYWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRUb2tlbkV4cGlyeShleHBpcnk6IHN0cmluZyk6IERhdGUge1xyXG4gIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XHJcbiAgXHJcbiAgaWYgKGV4cGlyeS5pbmNsdWRlcygnbScpKSB7XHJcbiAgICBjb25zdCBtaW51dGVzID0gcGFyc2VJbnQoZXhwaXJ5LnJlcGxhY2UoJ20nLCAnJykpO1xyXG4gICAgcmV0dXJuIG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgKyBtaW51dGVzICogNjAgKiAxMDAwKTtcclxuICB9IGVsc2UgaWYgKGV4cGlyeS5pbmNsdWRlcygnZCcpKSB7XHJcbiAgICBjb25zdCBkYXlzID0gcGFyc2VJbnQoZXhwaXJ5LnJlcGxhY2UoJ2QnLCAnJykpO1xyXG4gICAgcmV0dXJuIG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgKyBkYXlzICogMjQgKiA2MCAqIDYwICogMTAwMCk7XHJcbiAgfSBlbHNlIGlmIChleHBpcnkuaW5jbHVkZXMoJ2gnKSkge1xyXG4gICAgY29uc3QgaG91cnMgPSBwYXJzZUludChleHBpcnkucmVwbGFjZSgnaCcsICcnKSk7XHJcbiAgICByZXR1cm4gbmV3IERhdGUobm93LmdldFRpbWUoKSArIGhvdXJzICogNjAgKiA2MCAqIDEwMDApO1xyXG4gIH1cclxuICBcclxuICAvLyBEZWZhdWx0IHRvIDE1IG1pbnV0ZXNcclxuICByZXR1cm4gbmV3IERhdGUobm93LmdldFRpbWUoKSArIDE1ICogNjAgKiAxMDAwKTtcclxufVxyXG4iXSwibmFtZXMiOlsiand0IiwiSldUX1NFQ1JFVCIsInByb2Nlc3MiLCJlbnYiLCJKV1RfQUNDRVNTX0VYUElSWSIsIkpXVF9SRUZSRVNIX0VYUElSWSIsImdlbmVyYXRlQWNjZXNzVG9rZW4iLCJwYXlsb2FkIiwiY2xlYW5QYXlsb2FkIiwidXNlcklkIiwiZW1haWwiLCJ1c2VybmFtZSIsInJvbGUiLCJzaWduIiwiZXhwaXJlc0luIiwiZ2VuZXJhdGVSZWZyZXNoVG9rZW4iLCJ2ZXJpZnlUb2tlbiIsInRva2VuIiwidmVyaWZ5IiwiZ2V0VG9rZW5FeHBpcnkiLCJleHBpcnkiLCJub3ciLCJEYXRlIiwiaW5jbHVkZXMiLCJtaW51dGVzIiwicGFyc2VJbnQiLCJyZXBsYWNlIiwiZ2V0VGltZSIsImRheXMiLCJob3VycyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/jwt.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/semver","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fexecutive%2Fdigital-visit%2Froute&page=%2Fapi%2Fexecutive%2Fdigital-visit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fexecutive%2Fdigital-visit%2Froute.ts&appDir=C%3A%5CUsers%5Cvisha%5CDesktop%5CNew%20folder%20(4)%5CZopper%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cvisha%5CDesktop%5CNew%20folder%20(4)%5CZopper&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();