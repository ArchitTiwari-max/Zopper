// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/analytics-impact" | "/admin/attendance" | "/admin/dashboard" | "/admin/datamanagement" | "/admin/datamanagement/datewise" | "/admin/datamanagement/monthwise" | "/admin/datamanagement/storewise" | "/admin/datamanagement/usermanagement" | "/admin/digital-report" | "/admin/executives" | "/admin/issues" | "/admin/issues/[id]" | "/admin/notifications" | "/admin/sales" | "/admin/settings" | "/admin/stores" | "/admin/stores/[id]" | "/admin/visit-report" | "/executive" | "/executive/analytics-impact" | "/executive/assinged-task" | "/executive/dashboard" | "/executive/executive-form" | "/executive/notifications" | "/executive/profile" | "/executive/sales" | "/executive/store" | "/executive/visit-history"
type AppRouteHandlerRoutes = "/api/admin/analytics/partner-brand-type-visits" | "/api/admin/dashboard" | "/api/admin/digital-report/[id]/mark-reviewed" | "/api/admin/digital-report/data" | "/api/admin/excel-import/salesimport" | "/api/admin/excel-import/storeimport" | "/api/admin/executives/data" | "/api/admin/executives/filters" | "/api/admin/holidays" | "/api/admin/holidays/[id]" | "/api/admin/issues" | "/api/admin/issues/[id]" | "/api/admin/issues/[id]/assign" | "/api/admin/issues/[id]/comments" | "/api/admin/issues/[id]/status" | "/api/admin/issues/data" | "/api/admin/issues/filters" | "/api/admin/sales" | "/api/admin/stores/[id]/partner-brands" | "/api/admin/stores/data" | "/api/admin/stores/filters" | "/api/admin/users" | "/api/admin/users/export" | "/api/admin/visit-plan" | "/api/admin/visit-report/[id]/mark-reviewed" | "/api/admin/visit-report/data" | "/api/admin/visit-report/filters" | "/api/analytics/impact" | "/api/auth/create_user" | "/api/auth/forgot-password" | "/api/auth/logout" | "/api/auth/reset-password" | "/api/auth/signIn" | "/api/auth/verify-otp" | "/api/auth/verify-session" | "/api/executive/analytics/partner-brand-type-visits" | "/api/executive/assigned-tasks/count" | "/api/executive/assigned-tasks/pending-issue" | "/api/executive/assigned-tasks/pending-visit" | "/api/executive/brands" | "/api/executive/dashboard-stats" | "/api/executive/digital-visit" | "/api/executive/digital-visit/[id]" | "/api/executive/digital-visits/data" | "/api/executive/profile" | "/api/executive/store/data" | "/api/executive/store/filter" | "/api/executive/stores" | "/api/executive/stores/[id]" | "/api/executive/submit-task" | "/api/executive/visit-plan" | "/api/executive/visit-plan/[id]" | "/api/executive/visitform" | "/api/executive/visits/[id]" | "/api/executive/visits/data" | "/api/executive/visits/filter" | "/api/notifications" | "/api/notifications/count" | "/api/sales" | "/api/sales/daily" | "/api/upload"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin" | "/executive"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/analytics-impact": {}
  "/admin/attendance": {}
  "/admin/dashboard": {}
  "/admin/datamanagement": {}
  "/admin/datamanagement/datewise": {}
  "/admin/datamanagement/monthwise": {}
  "/admin/datamanagement/storewise": {}
  "/admin/datamanagement/usermanagement": {}
  "/admin/digital-report": {}
  "/admin/executives": {}
  "/admin/issues": {}
  "/admin/issues/[id]": { "id": string; }
  "/admin/notifications": {}
  "/admin/sales": {}
  "/admin/settings": {}
  "/admin/stores": {}
  "/admin/stores/[id]": { "id": string; }
  "/admin/visit-report": {}
  "/api/admin/analytics/partner-brand-type-visits": {}
  "/api/admin/dashboard": {}
  "/api/admin/digital-report/[id]/mark-reviewed": { "id": string; }
  "/api/admin/digital-report/data": {}
  "/api/admin/excel-import/salesimport": {}
  "/api/admin/excel-import/storeimport": {}
  "/api/admin/executives/data": {}
  "/api/admin/executives/filters": {}
  "/api/admin/holidays": {}
  "/api/admin/holidays/[id]": { "id": string; }
  "/api/admin/issues": {}
  "/api/admin/issues/[id]": { "id": string; }
  "/api/admin/issues/[id]/assign": { "id": string; }
  "/api/admin/issues/[id]/comments": { "id": string; }
  "/api/admin/issues/[id]/status": { "id": string; }
  "/api/admin/issues/data": {}
  "/api/admin/issues/filters": {}
  "/api/admin/sales": {}
  "/api/admin/stores/[id]/partner-brands": { "id": string; }
  "/api/admin/stores/data": {}
  "/api/admin/stores/filters": {}
  "/api/admin/users": {}
  "/api/admin/users/export": {}
  "/api/admin/visit-plan": {}
  "/api/admin/visit-report/[id]/mark-reviewed": { "id": string; }
  "/api/admin/visit-report/data": {}
  "/api/admin/visit-report/filters": {}
  "/api/analytics/impact": {}
  "/api/auth/create_user": {}
  "/api/auth/forgot-password": {}
  "/api/auth/logout": {}
  "/api/auth/reset-password": {}
  "/api/auth/signIn": {}
  "/api/auth/verify-otp": {}
  "/api/auth/verify-session": {}
  "/api/executive/analytics/partner-brand-type-visits": {}
  "/api/executive/assigned-tasks/count": {}
  "/api/executive/assigned-tasks/pending-issue": {}
  "/api/executive/assigned-tasks/pending-visit": {}
  "/api/executive/brands": {}
  "/api/executive/dashboard-stats": {}
  "/api/executive/digital-visit": {}
  "/api/executive/digital-visit/[id]": { "id": string; }
  "/api/executive/digital-visits/data": {}
  "/api/executive/profile": {}
  "/api/executive/store/data": {}
  "/api/executive/store/filter": {}
  "/api/executive/stores": {}
  "/api/executive/stores/[id]": { "id": string; }
  "/api/executive/submit-task": {}
  "/api/executive/visit-plan": {}
  "/api/executive/visit-plan/[id]": { "id": string; }
  "/api/executive/visitform": {}
  "/api/executive/visits/[id]": { "id": string; }
  "/api/executive/visits/data": {}
  "/api/executive/visits/filter": {}
  "/api/notifications": {}
  "/api/notifications/count": {}
  "/api/sales": {}
  "/api/sales/daily": {}
  "/api/upload": {}
  "/executive": {}
  "/executive/analytics-impact": {}
  "/executive/assinged-task": {}
  "/executive/dashboard": {}
  "/executive/executive-form": {}
  "/executive/notifications": {}
  "/executive/profile": {}
  "/executive/sales": {}
  "/executive/store": {}
  "/executive/visit-history": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
  "/executive": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
